/*
// Employee info
class Employee {
    // It's the unique id of each node;
    // unique id of this employee
    public int id;
    // the importance value of this employee
    public int importance;
    // the id of direct subordinates
    public List<Integer> subordinates;
};
*/
class EmployeeImportance {
    public int getImportance(List<Employee> employees, int id) {
        int[] res = new int[1];
        Map<Integer, Employee> map = new HashMap<>();
        for (Employee e : employees) {
            map.put(e.id, e);
        }
        dfs(map, id, res);
        return res[0];
    }
    
    void dfs(Map<Integer, Employee> map, int id, int[] res) {
        
        res[0] += map.get(id).importance;
        
        Employee e = map.get(id);
        
        for (Integer sub : e.subordinates) {
            dfs(map, sub, res);
        }
    }
}
